
@{
    ViewBag.Title = "Support";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Support</h2>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    @if (User.IsInRole("Support"))
    {
        <input type="button" id="close" value="Close conversation" />
        <input type="button" id="check" value="Check requests" />
    }
    else
    {
        <input type="button" id="request" value="Request support" />
    }
    <div id="returnMessage"></div>
    <ul id="discussion"></ul>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.supportHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addMessage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            chat.client.notify = function (message) {
                alert(message);
                $("#returnMessage").html("");
            };

            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

                $('#request').click(function () {
                    chat.server.requestSupport();
                    $("#returnMessage").html("Support requested. Please wait.");
                });

                $('#close').click(function () {
                    chat.server.close();
                });

                $('#check').click(function () {
                    chat.server.check();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

